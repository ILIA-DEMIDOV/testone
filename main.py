from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, Message

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
BOT_TOKEN = '7915298434:AAGif53T03tKt3nfvpHlCDBrTs-EkK_-p4U'

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
#–æ–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤
details = (
    '–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ:\n\n'
    '–¢–µ—Å—Ç—ã/–ë–∏–ª–µ—Ç—ã - –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç—ã DMV –∏ –ø–æ–ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –Ω–∞ –±–∏–ª–µ—Ç–∞—Ö, '
    '—á—Ç–æ–±—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –Ω–∞—Å—Ç–æ—è—â–µ–º—É —ç–∫–∑–∞–º–µ–Ω—É.\n\n'
    '–ó–Ω–∞–∫–∏ - –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑—É—á–∏—Ç—å –¥–æ—Ä–æ–∂–Ω—ã–µ –∑–Ω–∞–∫–∏, '
    '–≤–æ–ø—Ä–æ—Å—ã –ø–æ –∑–Ω–∞–∫–∞–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –±—É–¥—É—Ç –≤ –≤–∞—à–µ–º —ç–∫–∑–∞–º–µ–Ω–µ.\n\n'
    '–ü–î–î - –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è, '
    '–æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º –∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–∞–º.\n\n'
    '–≠–∫–∑–∞–º–µ–Ω - –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ 40 –≤–æ–ø—Ä–æ—Å–æ–≤ –∑–∞ 45 –º–∏–Ω—É—Ç, '
    '—á—Ç–æ –∏–º–∏—Ç–∏—Ä—É–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç DMV.'
)

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
language_button_eng = InlineKeyboardButton(text='English üá∫üá∏Ô∏è', callback_data='lang_eng')
language_button_rus = InlineKeyboardButton(text='Russian üá∑üá∫Ô∏è', callback_data='lang_rus')
language_button_esp = InlineKeyboardButton(text='Spanish üá™üá∏', callback_data='lang_esp')

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
language_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[[language_button_eng], [language_button_rus], [language_button_esp]])

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —à—Ç–∞—Ç–∞
state_buttons = [
    InlineKeyboardButton(text='California ‚òÄÔ∏è', callback_data='state_california'),
    InlineKeyboardButton(text='Washington üå≤', callback_data='state_washington'),
    InlineKeyboardButton(text='Florida üå¥', callback_data='state_florida'),
    InlineKeyboardButton(text='New York üóΩ', callback_data='state_new_york')  # –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ 'New York'
]

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —à—Ç–∞—Ç–∞
state_keyboard = InlineKeyboardMarkup(inline_keyboard=[[button] for button in state_buttons])

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —à—Ç–∞—Ç–∞
service_buttons = [
    InlineKeyboardButton(text='–¢–µ—Å—Ç—ã / –±–∏–ª–µ—Ç—ã', callback_data='test_1'),
    InlineKeyboardButton(text='–ü–î–î', callback_data='test_2'),
    InlineKeyboardButton(text='–ó–Ω–∞–∫–∏', callback_data='test_3'),
    InlineKeyboardButton(text='–≠–∫–∑–∞–º–µ–Ω', callback_data='test_4')
]
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
service_keyboard = InlineKeyboardMarkup(inline_keyboard=[[button] for button in service_buttons])


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/start"
@dp.message(CommandStart())
async def process_start_command(message: Message):
    await message.answer(text='.            Choose language:          .', reply_markup=language_keyboard)


# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
@dp.callback_query(lambda callback: callback.data.startswith('lang_'))
async def handle_language_selection(callback: types.CallbackQuery):
    await callback.answer()
    await callback.message.edit_text(text='.            Choose state üá∫üá∏Ô∏è:          .', reply_markup=state_keyboard)


# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ —à—Ç–∞—Ç–∞
@dp.callback_query(lambda callback: callback.data.startswith('state_'))
async def handle_state_selection(callback: types.CallbackQuery):
    await callback.answer()
    state_name = callback.data.split('_')[1].replace("New-York", "New York").replace("-", " ").capitalize()  # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —à—Ç–∞—Ç–∞


    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω –ª–∏ —à—Ç–∞—Ç
    if state_name == 'California':
        await callback.message.edit_text(
            text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —à—Ç–∞—Ç California! {details}',
            reply_markup=service_keyboard
        )
    elif state_name == 'Washington':
        await callback.message.edit_text(
            text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —à—Ç–∞—Ç Washington! {details}',
            reply_markup=service_keyboard
        )
    elif state_name == 'Florida':
        await callback.message.edit_text(
            text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —à—Ç–∞—Ç Florida! {details}',
            reply_markup=service_keyboard
        )
    elif state_name == 'New York':  # –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ 'New York'
        await callback.message.edit_text(
            text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —à—Ç–∞—Ç New York! {details}',  # –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ 'New York'
            reply_markup=service_keyboard
        )

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞
@dp.callback_query(lambda callback: callback.data.startswith('test_'))
async def handle_service_selection(callback: types.CallbackQuery):
    await callback.answer()
    service_name = callback.data.split('_')[1].capitalize()  # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
    await callback.message.edit_text(text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–µ—Ä–≤–∏—Å –Ω–æ–º–µ—Ä {service_name}.', reply_markup=None)


# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
if __name__ == '__main__':
    dp.run_polling(bot)
